unit main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, DBAccess, MyAccess, MemDS,
  Vcl.StdCtrls, Datasnap.DBClient, SimpleDS, Vcl.ComCtrls, ComObj, Vcl.Menus, StrUtils,
  Vcl.ExtCtrls;

type
  TForm1 = class(TForm)
    MyConnection1: TMyConnection;
    Edit1: TEdit;
    Label1: TLabel;
    Memo1: TMemo;
    Label2: TLabel;
    Edit2: TEdit;
    Label3: TLabel;
    Button1: TButton;
    MyQuery1: TMyQuery;
    MyTable1: TMyTable;
    OpenDialog1: TOpenDialog;
    RichEdit1: TRichEdit;
    Button2: TButton;
    Button3: TButton;
    ListBox1: TListBox;
    Label4: TLabel;
    Memo2: TMemo;
    Button4: TButton;
    MyDataSource1: TMyDataSource;
    Image1: TImage;
    procedure Button1Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure ListBox1DblClick(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    //procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

type
  TSinonims = record
    id  : integer;
    parent : integer;
    txt: string[50];
end;


var
  Form1: TForm1;
  sin_mas: array of TSinonims;
  sin_file: file of TSinonims;
  sin_word: TSinonims;
  str: string; //рабочая строка
  str_rub: string; //строка с рубриками
  fl: integer; //флаг выхода из цикла обработки рубрик
  //i, j, k, l: integer; //счетчики для циклов
  lg: integer; //длина строки
  mas_alf: array [0..33] of string=('а','б','в','г','д','е','ё','ж','з','и','й','к','л','м','н','о','п','р','с','т','у','ф','х','ц','ч','ш','щ','ъ','ы','ь','э','ю','я',' ');
  mas: array of string;    //массив расширенной выборки
  a, b: string;    //рабочие переменные

implementation

{$R *.dfm}

uses edit;

procedure racshirenie(s: string);
var i,j,k:integer;
begin
  SetLength(mas, length(s)*length(mas_alf)+length(s)+(length(s)+1)*length(mas_alf)+(length(s)-1));
  k:=0;
  for i:=1 to length(s) do        //замена
    begin
    for j:=0 to length(mas_alf)-1 do
      begin
      mas[k]:=StuffString(s, i, 1, mas_alf[j]);
      inc(k);
      end;
    end;

  for i:=1 to length(s) do        //удаление
      begin
      mas[k]:=s;
      Delete(mas[k], i, 1);
      inc(k);
      end;

  for i:=1 to length(s)+1 do        //вставка
    begin
    for j:=0 to length(mas_alf)-1 do
      begin
      mas[k]:=StuffString(s, i, 0, mas_alf[j]);
      inc(k);
      end;
    end;

  for i:=1 to length(s)-1 do        //перестановка
      begin
      b:=s;
      a:=s[i+1];
      insert(a,b,i);
      delete(b,i+2,1);
      mas[k]:=b;
      inc(k);
      end;

for i:=0 to length(mas)-1 do
Form1.RichEdit1.Lines.Add(mas[i]);
end;

procedure poisk(s: string; x:integer);
var j:integer;
begin
  for j:=0 to length(sin_mas)-1 do     //поиск id родителя по файлу
    if sin_mas[j].txt=s then begin fl:=sin_mas[j].parent; break; end;

  for j:=0 to length(sin_mas)-1 do    //поиск родителя
    if sin_mas[j].id=fl then begin Form1.ListBox1.Items[x]:=sin_mas[j].txt;  break; end;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
//Удмуртия, в ленту, бюджет
//добавить в файл

{sin_word.id:=12;
sin_word.parent:=9;
sin_word.txt:='буджет';

AssignFile(sin_file,GetCurrentDir+'\Sinonims.dat');
Reset(sin_file);
Seek(sin_file,FileSize(sin_file));  //переход на конец файла
write(sin_file, sin_word);
CloseFile(sin_file);
}

{

function DelDat(c:integer):integer;
begin

Reset(F);
 while not Eof(F) do
    begin
      read(F, DummyMember);
      Members[FilePos(F)-1]:=DummyMember;
      j:=FilePos(F);
    end;

Rewrite(F);     //очистка файла, перевод указателя на
                //начало первого компонента файла

for i:=0 to j-1 do
  begin
  if i=x then continue
   else
   begin
   Write(F, Members[i]);
   end;
  end;

end;

//////////

y:=0;  //проверка по файлу
AssignFile(F,s+'\psw.dat');
Reset(F);
 while not Eof(F) do
    begin
      read(F, DummyMember);
      if DummyMember.polz=s1 then y:=1;
    end;
CloseFile(F);

//////////////

if (y=0) then      //добавить в файл
   begin
    ComboBox1.Items.Add(s1);
    DummyMember.polz:=s1;
    DummyMember.sumxor:='';
    AssignFile(F,s+'\psw.dat');
    Reset(F);
    Seek(F,FileSize(F));
    write(F, DummyMember);
    CloseFile(F);
   end;

/////////////

AssignFile(F,s+'\psw.dat');
DelDat(x);
CloseFile(F);

unction DelDat(c:integer):integer;
begin

Reset(F);
 while not Eof(F) do
    begin
      read(F, DummyMember);
      Members[FilePos(F)-1]:=DummyMember;
      j:=FilePos(F);
    end;

Rewrite(F);     //очистка файла, перевод указателя на
                //начало первого компонента файла

for i:=0 to j-1 do
  begin
  if i=x then continue
   else
   begin
   Write(F, Members[i]);
   end;
  end;

end;


//////////////////////

procedure TForm1.FormShow(Sender: TObject);
var ss:string;
flag:boolean;
begin
AssignFile(F,s+'\psw.dat');
  flag:=true;
  Reset(F);
  while not Eof(F) do
      begin
      read(F, DummyMember);
      ADOQuery1.SQL.Clear;
      ADOQuery1.SQL.Add('select Polzovatel from Groups');
      ADOQuery1.SQL.Add('where Polzovatel="'+DummyMember.polz+'";');
      ADOQuery1.Open;
      if ADOQuery1.RecordCount=1 then
         begin
         ComboBox1.Items.Add(DummyMember.polz);
         end
         else
         begin
         Deldat(FilePos(F)-1);
         Reset(F);
         end;
      end;

ADOQuery1.SQL.Clear;
ADOQuery1.SQL.Add('select Polzovatel from Groups;');
ADOQuery1.Open;
AssignFile(F,s+'\psw.dat');
Reset(F);
for i:=0 to ADOQuery1.RecordCount-1 do
  begin
   ss:=ADOQuery1.FieldByName('Polzovatel').value;
   Reset(F);
   j:=0;
   while not Eof(F) do
      begin
      read(F, DummyMember);
      if ss=DummyMember.polz then begin j:=1; break; end;
      end;
   if j=0 then begin
               ComboBox1.Items.Add(ss);
               seek(F, FileSize(F));
               DummyMember.polz:=ss;
               DummyMember.sumxor:='';
               write(F,DummyMember);
               end;
   ADOQuery1.Next;
   end;
CloseFile(F);
end;

//////////////

вход по ентеру
procedure TForm2.Edit1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
if ord(key)=13 then Button1.Click;
end;


}

end;

procedure TForm1.Button2Click(Sender: TObject);
begin
//добавление в таблицу
{
MyQuery1.Connection := MyConnection1;
MyQuery1.SQL.Text := 'INSERT INTO node_revision VALUES ("","","1","пробник","","","1","2","1","0")';
MyQuery1.Execute;     }
end;

procedure TForm1.Button3Click(Sender: TObject);
var COM_Word: olevariant;
    j, l, i: integer;
begin
  try
    if OpenDialog1.Execute then
    begin
    Caption := ExtractFileName(OpenDialog1.FileName);
    COM_Word := CreateOLEObject('Word.Application');
    COM_Word.Visible := False;
    COM_Word.Documents.Open(OpenDialog1.FileName);
    Com_Word.ActiveDocument.Select;
    COM_Word.Selection.Copy;
    Memo2.PasteFromClipboard;
    COM_Word.DisplayAlerts := False;
    COM_Word.Quit;
    end;
  finally
    COM_Word := UnAssigned;
  end;

str:=Memo2.Lines.Text;
str_rub:=Copy(str,1,AnsiPos('[',str)-1);  //копируем все до зага  (рубрики, подписи, ссылки)

Delete(str,1,AnsiPos('[',str));  //удаляем все до зага
Edit1.Text:=Copy(str,1,AnsiPos(']',str)-1);  //копируем заг

Delete(str,1,AnsiPos('[',str)); //удаляем заг
Memo1.Lines.Text:=Copy(str,1,AnsiPos(']',str)-1); //копируем тело

Delete(str,1,AnsiPos('[',str)); //удаляем тело
str:=Copy(str,1,AnsiPos(']',str)-1);  //копируем тэги
lg:=length(str);                          // на случай
for i:=1 to lg do                         // если тэги
  begin                                   // написаны
  if str[i]=#13 then str[i]:=' ';         // по старинке
  if str[i]=#10 then str[i]:=' ';         // в столбик
  end;
Edit2.Text:=str;


Repeat     //разделяем слова по запятым. Точка - конец строки с рубриками
 begin
  a:=Copy(str_rub,1,AnsiPos(',',str_rub)-1);
  a:=Trim(a);
  a:=AnsiLowerCase(a);
  ListBox1.Items.Add(a);
  Delete(str_rub,1,AnsiPos(',',str_rub));
  if AnsiPos(',',str_rub)=0 then
      begin
      a:=Copy(str_rub,1,AnsiPos('.',str_rub)-1);
      a:=Trim(a);
      a:=AnsiLowerCase(a);
      ListBox1.Items.Add(a);
      end;
 end;
until AnsiPos(',',str_rub)=0;


AssignFile(sin_file,GetCurrentDir+'\Sinonims.dat'); //подключаемся к файлу
Reset(sin_file);
Seek(sin_file,0);
i:=0;
while not Eof(sin_file) do
begin
  Setlength(sin_mas,i+1);
  read(sin_file, sin_word);
  sin_mas[i]:=sin_word;
  inc(i);
end;
CloseFile(sin_file);      //закрыли файл, дальше работаем с массивом

for l:=0 to ListBox1.Count-1 do
begin
  fl:=-1;
  poisk(ListBox1.Items[l], l);
  if fl=-1 then begin
                racshirenie(ListBox1.Items[l]);
                for j:=0 to length(mas)-1 do
                begin
                  poisk(mas[j], l);
                  if fl<>-1 then break;
                end;
                end;

end;


//showmessage(str_rub+'='+sin_word.txt);

end;

procedure TForm1.Button4Click(Sender: TObject);
begin
Form2.Show;
end;

procedure TForm1.FormCreate(Sender: TObject);
var i:integer;
begin
//s:=GetCurrentDir;  //установелние текущего каталога
if FileExists('Sinonims.dat')=false then  //проверка наличия файла
  begin
    i:=FileCreate('Sinonims.dat');    //если нету то создать
    FileClose(i);              //и закрыть чтоб ошибок небыло
  end;
end;

procedure TForm1.FormDestroy(Sender: TObject);
begin
//sldb.Free;
end;

procedure TForm1.ListBox1DblClick(Sender: TObject);
begin
//по двойному клику вызвать привязку
Form2.Edit1.Text:=ListBox1.Items[ListBox1.ItemIndex];
Form2.Show;
end;

end.
